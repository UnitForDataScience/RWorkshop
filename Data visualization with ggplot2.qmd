---
title: "Data Visualization with ggplot2"
format: pdf
editor: visual
---


```{r}
## you can set your working directory in this chunk 

#setwd("/Users/namigabbasov/Desktop/R-Data-Carpentry")
```

```{r}
## libraries 

#install.packages("tidyverse")
#install.packages("magrittr")

library(tidyverse)
library(magrittr)
```

```{r}
## import data
surveys_complete<-read_csv("https://raw.githubusercontent.com/UnitForDataScience/RWorkshop/main/surveys_complete.csv")
```

## Plotting with ggplot2: Format

```{r}
# ggplot(data = <DATA>, mapping = aes(<MAPPINGS>)) +  <GEOM_FUNCTION>()
```

## Scatterplot

```{r}
ggplot(data = surveys_complete, aes(x = weight, y = hindfoot_length)) +
  geom_point()
```

```{r}
# Assign plot to a variable
surveys_plot <- ggplot(data = surveys_complete,
                       mapping = aes(x = weight, y = hindfoot_length))

# Draw the plot
surveys_plot +
    geom_point()
```

## Hexbin

```{r}
#install.packages("hexbin")
library(hexbin)

ggplot(data = surveys_complete,
                       mapping = aes(x = weight, y = hindfoot_length))+
  geom_hex()
```
## Building your plots iteratively

```{r}
## add transparency (alpha) to avoid overplotting
ggplot(data = surveys_complete, aes(x = weight, y = hindfoot_length)) +
    geom_point(alpha = 0.1)
```

```{r}
## add color
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
    geom_point(alpha = 0.1, color = "blue")
```

```{r}
## color by species_id
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
    geom_point(alpha = 0.1, aes(color = species_id))
```
```{r}
## shape by species_id
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length, color =sex)) +
    geom_point(alpha = 0.5, aes(shape = sex))
```
```{r}
## add a line: global environment 
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
    geom_point(alpha = 0.5, aes(shape = sex, color =sex))+
  geom_smooth()
```

```{r}
## add a line: local environment 
library(ggplot2)

ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length, color = sex)) +
  geom_point(alpha = 0.5) +
  geom_smooth()
```

```{r}
## Add a straight line 
ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length, color = sex, shape = sex)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm")


ggplot(data = surveys_complete, mapping = aes(x = weight, y = hindfoot_length)) +
  geom_point(alpha = 0.5, aes(color = sex, shape = sex)) +
  geom_smooth(method = "lm")
```

## Distribution of a variable: Histogram 
```{r}
ggplot(data = surveys_complete, aes(x = hindfoot_length)) +
  geom_histogram(bins = 30, fill = "blue", color = "black")
```


```{r}
## A publication level Histogram 
ggplot(data = surveys_complete, aes(x = hindfoot_length)) +
  geom_histogram(bins = 30, fill = "blue", color = "black", alpha = 0.7) +
  geom_density(aes(y = ..count..), color = "red", size = 1) +
  labs(title = "Histogram of Hindfoot Length",
       x = "Hindfoot Length (mm)",
       y = "Frequency") +
  theme_minimal() +
  annotate("text", x = 32, y = 7000, label = "Note: Peak around 7200 mm", color = "black", size = 4, angle = 0)
```

## Distribution of a variable: Density Plot 
```{r}
ggplot(data = surveys_complete, aes(x = hindfoot_length)) +
  geom_density(fill = "blue", color = "black", bw=1)
```

```{r}
ggplot(data = surveys_complete, aes(x = hindfoot_length)) +
  geom_density(fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Density Plot of Hindfoot Length",
       x = "Hindfoot Length (mm)",
       y = "Density") +
  annotate("text", x = 32, y = 0.1, label = "Note: Peak around 7200 mm", color = "black", size = 4, angle = 0)
```



## Boxplot: Continous variable and categorical variable 

```{r}
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
    geom_boxplot()
```



```{r}
# add color, jitters 
ggplot(data = surveys_complete, mapping = aes(x = species_id, y = weight)) +
    geom_boxplot(outlier.shape = NA) +
    geom_jitter(alpha = 0.3, color = "tomato")
```

## violin: Continuous variable and categorical variable
```{r}
 ggplot(data = surveys_complete, mapping = aes(x = sex, y = hindfoot_length)) +
    geom_violin(color = "red", fill = "blue", alpha =.6)
```


## Plotting time series data

```{r}
## prepare data first 
yearly_counts <- surveys_complete %>%
  count(year, genus)
```

```{r}
## Now plot it with line plot
ggplot(data = yearly_counts, aes(x = year, y = n)) +
     geom_line()
```

```{r}
## modifying the aesthetic function, group = genus 
ggplot(data = yearly_counts, aes(x = year, y = n, group = genus)) +
    geom_line()
```

```{r}
## add lines to distinguish colors 
ggplot(data = yearly_counts, aes(x = year, y = n, color = genus)) +
    geom_line()
```

## Integrating the pipe operator with ggplot2

```{r}
yearly_counts %>%
    ggplot(mapping = aes(x = year, y = n, color = genus)) +
    geom_line()
```

```{r}
## use data manipulation before ggplot with pipe
yearly_counts_graph <- surveys_complete %>%
    count(year, genus) %>%
    ggplot(mapping = aes(x = year, y = n, color = genus)) +
    geom_line()

yearly_counts_graph
```

## Faceting

```{r}
ggplot(data = yearly_counts, aes(x = year, y = n)) +
    geom_line() +
    facet_wrap(facets = vars(genus))
```

```{r}
## split the line in each plot by the sex of each individual measured
yearly_sex_counts <- surveys_complete %>%
                      count(year, genus, sex)
```

```{r}
## now make the faceted plot by splitting further by sex using color (within a single plot)
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, color = sex)) +
  geom_line() +
  facet_wrap(facets =  vars(genus))
```

```{r}
## We can also facet both by sex and genus
ggplot(data = yearly_sex_counts,
       mapping = aes(x = year, y = n, color = sex)) +
  geom_line() +
  facet_grid(rows = vars(sex), cols =  vars(genus))
```

```{r}
## organise the panels only by rows (or only by columns)

# One column, facet by rows
ggplot(data = yearly_sex_counts,
       mapping = aes(x = year, y = n, color = sex)) +
  geom_line() +
  facet_grid(rows = vars(genus))
```

```{r}
# One row, facet by column
ggplot(data = yearly_sex_counts,
       mapping = aes(x = year, y = n, color = sex)) +
  geom_line() +
  facet_grid(cols = vars(genus))
```

## ggplot2 themes

```{r}
## a simpler white background using the theme_bw() function
ggplot(data = yearly_sex_counts,
        mapping = aes(x = year, y = n, color = sex)) +
     geom_line() +
     facet_wrap(vars(genus)) +
     theme_bw()
```

```{r}
## Classic theme
ggplot(data = yearly_sex_counts,
        mapping = aes(x = year, y = n, color = sex)) +
     geom_line() +
     facet_wrap(vars(genus)) +
     theme_bw()
```

## Customization

```{r}
## add titles, x-axis name, y-axis name
ggplot(data = yearly_sex_counts, aes(x = year, y = n, color = sex)) +
    geom_line() +
    facet_wrap(vars(genus)) +
    labs(title = "Observed genera through time",
         x = "Year of observation",
         y = "Number of individuals") +
    theme_bw()
```

```{r}
## Increase font size by generic theme() function
ggplot(data = yearly_sex_counts, mapping = aes(x = year, y = n, color = sex)) +
    geom_line() +
    facet_wrap(vars(genus)) +
    labs(title = "Observed genera through time",
        x = "Year of observation",
        y = "Number of individuals") +
    theme_bw() +
    theme(text=element_text(size = 16))
```

## Arranging plots

```{r}
#install.packages("patchwork")
library(patchwork)
```

```{r}
plot_weight <- ggplot(data = surveys_complete, aes(x = species_id, y = weight)) +
  geom_boxplot() +
  labs(x = "Species", y = expression(log[10](Weight))) +
  scale_y_log10()

plot_count <- ggplot(data = yearly_counts, aes(x = year, y = n, color = genus)) +
  geom_line() +
  labs(x = "Year", y = "Abundance")

plot_weight / plot_count + plot_layout(heights = c(3, 2))
```

## Exporting Plots

```{r}
my_plot <- ggplot(data = yearly_sex_counts,
                  aes(x = year, y = n, color = sex)) +
    geom_line() +
    facet_wrap(vars(genus)) +
    labs(title = "Observed genera through time",
        x = "Year of observation",
        y = "Number of individuals") +
    theme_bw() +
    theme(axis.text.x = element_text(colour = "grey20", size = 12, angle = 90,
                                     hjust = 0.5, vjust = 0.5),
          axis.text.y = element_text(colour = "grey20", size = 12),
          text = element_text(size = 16))

ggsave("name_of_file.png", my_plot, width = 15, height = 10)
```

```{r}
## This also works for plots combined with patchwork
plot_combined <- plot_weight / plot_count + plot_layout(heights = c(3, 2))
ggsave("plot_combined.png", plot_combined, width = 10, dpi = 300)
```
